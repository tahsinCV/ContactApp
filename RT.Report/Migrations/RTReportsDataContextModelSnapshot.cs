// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using RT.Reports.DataLayer;

namespace RT.Reports.Migrations
{
    [DbContext(typeof(RTReportsDataContext))]
    partial class RTReportsDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:Collation", "Turkish_Turkey.1252")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("RT.Report.DataLayer.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID")
                        .UseIdentityByDefaultColumn();

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("date");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("integer")
                        .HasColumnName("CreateUserID");

                    b.Property<string>("ExternalSystemCode")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValueSql("true");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("date");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("integer")
                        .HasColumnName("UpdateUserID");

                    b.HasKey("Id");

                    b.ToTable("City");
                });

            modelBuilder.Entity("RT.Report.DataLayer.Report", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID")
                        .UseIdentityByDefaultColumn();

                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("CityID");

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("date");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("integer")
                        .HasColumnName("CreateUserID");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValueSql("true");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<int>("PhoneCountInLocation")
                        .HasColumnType("integer");

                    b.Property<int>("RequestStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("RequestStatusID");

                    b.Property<DateTime>("RequestTime")
                        .HasColumnType("date");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("date");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("integer")
                        .HasColumnName("UpdateUserID");

                    b.Property<int>("UsersCountInLocation")
                        .HasColumnType("integer");

                    b.Property<string>("Uuid")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("UUID");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("RequestStatusId");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("RT.Report.DataLayer.ReportStatus", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("ID")
                        .UseIdentityByDefaultColumn();

                    b.Property<DateTime>("CreateTime")
                        .HasColumnType("date");

                    b.Property<int>("CreateUserId")
                        .HasColumnType("integer")
                        .HasColumnName("CreateUserID");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("integer");

                    b.Property<bool?>("IsActive")
                        .IsRequired()
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValueSql("true");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("UpdateTime")
                        .HasColumnType("date");

                    b.Property<int>("UpdateUserId")
                        .HasColumnType("integer")
                        .HasColumnName("UpdateUserID");

                    b.HasKey("Id");

                    b.ToTable("ReportStatus");
                });

            modelBuilder.Entity("RT.Report.DataLayer.Report", b =>
                {
                    b.HasOne("RT.Report.DataLayer.City", "City")
                        .WithMany("Reports")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_City")
                        .IsRequired();

                    b.HasOne("RT.Report.DataLayer.ReportStatus", "RequestStatus")
                        .WithMany("Reports")
                        .HasForeignKey("RequestStatusId")
                        .HasConstraintName("FK_Report_Status")
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("RequestStatus");
                });

            modelBuilder.Entity("RT.Report.DataLayer.City", b =>
                {
                    b.Navigation("Reports");
                });

            modelBuilder.Entity("RT.Report.DataLayer.ReportStatus", b =>
                {
                    b.Navigation("Reports");
                });
#pragma warning restore 612, 618
        }
    }
}
